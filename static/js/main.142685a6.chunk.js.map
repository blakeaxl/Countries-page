{"version":3,"sources":["assets/images/logo.png","assets/images/oops.png","redux/countriesDuks.js","Components/CountryCard.jsx","Components/Countries.jsx","Components/Country.jsx","Components/Home.jsx","Components/FavoritesCard.jsx","assets/images/favorites.png","Components/Favorites.jsx","App.jsx","redux/store.js","index.js"],"names":["initialData","array","singleCountry","favorites","GET_COUNTRIES_SUCCESS","GET_SINGLE_COUNTRY_SUCCESS","GET_FAVORITES_SUCCESS","ADD_COUNTRY_TO_FAVORITES","REMOVE_COUNTRY_FROM_FAVORITES","GetFavoritesCountries","dispatch","getState","type","payload","JSON","parse","localStorage","getItem","err","console","log","CountryCard","item","to","name","className","src","flag","alt","region","population","capital","Countries","useDispatch","countries","useSelector","store","useState","countriesTemplates","setCountriesTemplates","setRegion","countryName","setCountryName","SearchFilter","filter","map","toLowerCase","indexOf","push","useEffect","a","Axios","get","res","data","onChange","e","String","target","value","placeholder","autoComplete","length","logo","noResults","Country","useParams","country","GetSingleCountryData","nativeName","subregion","area","alpha2Code","alpha3Code","undefined","borders","callingCodes","timezones","onClick","innerHTML","favItem","setItem","stringify","RemoveFromFavorites","Home","FavoritesCard","Favorites","App","exact","activeClassName","render","location","TransitionGroup","CSSTransition","timeout","classNames","path","key","rootReducer","combineReducers","state","action","test","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","component","document","getElementById"],"mappings":"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","file":"static/js/main.142685a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9d8841d2.png\";","export default __webpack_public_path__ + \"static/media/oops.896b625b.png\";","import Axios from 'axios';\r\n\r\n\r\nconst initialData = {\r\n    array: [],\r\n    singleCountry: [],\r\n    favorites: []\r\n}\r\n\r\nconst GET_COUNTRIES_SUCCESS = 'GET_COUNTRIES_SUCCESS';\r\n\r\nconst GET_SINGLE_COUNTRY_SUCCESS = 'GET_SINGLE_COUNTRY_SUCCESS';\r\n\r\nconst GET_FAVORITES_SUCCESS = 'GET_FAVORITES_SUCCESS'; \r\n\r\nconst ADD_COUNTRY_TO_FAVORITES = 'ADD_COUNTRY_TO_FAVORITES';\r\n\r\nconst REMOVE_COUNTRY_FROM_FAVORITES = 'REMOVE_COUNTRY_FROM_FAVORITES';\r\n\r\nexport default function countriesReducer(state = initialData, action){\r\n    switch(action.type){\r\n        case GET_COUNTRIES_SUCCESS:\r\n            return {...state, array: action.payload}\r\n        case GET_SINGLE_COUNTRY_SUCCESS:\r\n            return {...state, singleCountry: action.payload}\r\n        case GET_FAVORITES_SUCCESS:\r\n            return{...state, favorites: action.payload}\r\n        case ADD_COUNTRY_TO_FAVORITES:\r\n\r\n            const filter = state.favorites.filter(item => item.name === action.payload.name);\r\n\r\n            if(filter.length === 0){\r\n                return{...state, favorites: [...state.favorites, action.payload]}\r\n            }\r\n\r\n            return state\r\n        case REMOVE_COUNTRY_FROM_FAVORITES:\r\n\r\n            const test = state.favorites.filter(item => item.name === action.payload.name);\r\n\r\n            if(test.length !== 0){\r\n\r\n                const array = state.favorites.filter(item => item.name !== action.payload.name);\r\n\r\n                localStorage.setItem('favorites', JSON.stringify(array));\r\n\r\n                return state\r\n\r\n            }\r\n            else{\r\n                return state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const GetCountries = () => async (dispatch, getState) => {\r\n    try{\r\n        const res = await Axios.get('https://restcountries.eu/rest/v2/all');\r\n\r\n        dispatch({\r\n            type: GET_COUNTRIES_SUCCESS,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const GetSingleCountryData = ({country}) => async (dispatch, getState) => {\r\n    try{\r\n        const res =  await Axios.get('https://restcountries.eu/rest/v2/name/' + country);\r\n\r\n        dispatch({\r\n            type: GET_SINGLE_COUNTRY_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const GetFavoritesCountries = () => (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: GET_FAVORITES_SUCCESS,\r\n            payload: JSON.parse(localStorage.getItem('favorites')) || []\r\n        })\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const AddToFavorites = (item) => (dispatch, getState) => {\r\n\r\n    const array = JSON.parse(localStorage.getItem('favorites')) || [];\r\n\r\n    const filter = array.filter(favItem => favItem.name === item.name);\r\n\r\n    if(filter.length === 0){\r\n\r\n        array.push(item);\r\n\r\n        localStorage.setItem('favorites', JSON.stringify(array));\r\n\r\n        try{\r\n            dispatch({\r\n                type: ADD_COUNTRY_TO_FAVORITES,\r\n                payload: item\r\n            })\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n    else{\r\n        console.log('ya se encuentra en favoritos')\r\n    }\r\n}\r\n\r\nexport const RemoveFromFavorites = (item) => (dispatch, getState) => {\r\n\r\n    const array = JSON.parse(localStorage.getItem('favorites')) || [];\r\n\r\n    const filter = array.filter(favItem => favItem.name !== item.name);\r\n\r\n    localStorage.setItem('favorites', JSON.stringify(filter));\r\n\r\n    try{\r\n        dispatch({\r\n            type: REMOVE_COUNTRY_FROM_FAVORITES,\r\n            payload: item\r\n        })\r\n    }\r\n    catch(err){\r\n        console.log(err)\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CountryCard = ({ item }) => {\r\n  return (\r\n    <Link to={\"/countries/\" + item.name} className=\"decoration-text\">\r\n      <div className=\"card-container\">\r\n        <img src={item.flag} alt=\"country flag\" className=\"flag\" />\r\n        <h1 className=\"card-title\"> {item.name} </h1>\r\n        <ul className=\"country-info-list\">\r\n          <li>\r\n            Region: <span> {item.region}</span>{\" \"}\r\n          </li>\r\n          <li>\r\n            Population: <span> {item.population}</span>{\" \"}\r\n          </li>\r\n          <li>\r\n            Capital:<span> {item.capital}</span>{\" \"}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport logo from \"../assets/images/logo.png\";\r\n\r\nimport noResults from \"../assets/images/oops.png\";\r\n\r\nimport { GetCountries } from \"../redux/countriesDuks\";\r\nimport CountryCard from \"./CountryCard\";\r\n\r\nconst Countries = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const countries = useSelector((store) => store.countries.array);\r\n\r\n  const [countriesTemplates, setCountriesTemplates] = useState([]);\r\n\r\n  const [region, setRegion] = useState(\"All\");\r\n\r\n  const [countryName, setCountryName] = useState(\"\");\r\n\r\n  const countryNameFunction = (e) => {\r\n    setCountryName(String(e.target.value));\r\n  };\r\n\r\n  const DetectRegionFilter = (e) => {\r\n    setRegion(String(e.target.value));\r\n  };\r\n\r\n  const SearchFilter = () => {\r\n    const filter = [];\r\n\r\n    countriesTemplates.map((item) => {\r\n      if (item.name.toLowerCase().indexOf(countryName.toLowerCase()) !== -1) {\r\n        return filter.push(item);\r\n      }\r\n      return;\r\n    });\r\n\r\n    return filter;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCountriesTemplates(countries);\r\n  }, [countries]);\r\n\r\n  useEffect(() => {\r\n    if (region !== \"All\") {\r\n      setCountriesTemplates(\r\n        countries.filter(\r\n          (item) => item.region.toLowerCase() === region.toLowerCase()\r\n        )\r\n      );\r\n    } else {\r\n      setCountriesTemplates(countries);\r\n    }\r\n  }, [region]);\r\n\r\n  useEffect(() => {\r\n    dispatch(GetCountries());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"search-options-container\">\r\n        <div className=\"filter\">\r\n          <h2>Filter by region:</h2>\r\n          <select onChange={DetectRegionFilter} className=\"options-input\">\r\n            <option value=\"All\">All</option>\r\n            <option value=\"Americas\">Americas</option>\r\n            <option value=\"Asia\">Asia</option>\r\n            <option value=\"Europe\">Europe</option>\r\n            <option value=\"Africa\">Africa</option>\r\n            <option value=\"Oceania\">Oceania</option>\r\n          </select>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"search\"\r\n          placeholder=\"Type any country\"\r\n          onChange={countryNameFunction}\r\n          className=\"search-bar\"\r\n          autoComplete=\"off\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"countries-container\">\r\n        {countriesTemplates.length === 0 ? (\r\n          <div className=\"loading\">\r\n            <img src={logo} alt=\"loading icon\" className=\"loading-logo\" />\r\n            <h2>Loading...</h2>\r\n          </div>\r\n        ) : SearchFilter().length === 0 ? (\r\n          <div className=\"no-countries-found\">\r\n            <img src={noResults} alt=\"no results image\" />\r\n            <h2>Oops! sorry we couldn't find any country with that name.</h2>\r\n          </div>\r\n        ) : (\r\n          SearchFilter().map((item) => (\r\n            <CountryCard item={item} key={item.name} />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  AddToFavorites,\r\n  GetFavoritesCountries,\r\n  GetSingleCountryData,\r\n  RemoveFromFavorites,\r\n} from \"../redux/countriesDuks\";\r\n\r\nconst Country = () => {\r\n  const countryName = useParams();\r\n\r\n  const data = useSelector((store) => store.countries.singleCountry);\r\n\r\n  const favorites = useSelector((store) => store.countries.favorites);\r\n\r\n  const country = data[0] || [];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const Itsaved = () => {\r\n    const filter = favorites.filter((item) => item.name === country.name);\r\n\r\n    if (filter.length !== 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(GetSingleCountryData(countryName));\r\n\r\n    dispatch(GetFavoritesCountries());\r\n\r\n    console.log(data);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"section single-country\">\r\n      <div className=\"country-info-container\">\r\n        <img src={country.flag} alt=\"country flag\" />\r\n        <div className=\"country-titles\">\r\n          <h2>{country.name}</h2>\r\n          <h3>Native name: {country.nativeName}</h3>\r\n        </div>\r\n\r\n        <ul className=\"principal-data\">\r\n          <li>\r\n            Region: <span>{country.region}</span>{\" \"}\r\n          </li>\r\n          <li>\r\n            Sub region: <span>{country.subregion}</span>{\" \"}\r\n          </li>\r\n          <li>\r\n            Capital: <span>{country.capital}</span>{\" \"}\r\n          </li>\r\n          <li>\r\n            Population: <span>{country.population}</span>{\" \"}\r\n          </li>\r\n          <li>\r\n            Area: <span>{country.area}</span>{\" \"}\r\n          </li>\r\n        </ul>\r\n        <ul className=\"data-list\">\r\n          <li>\r\n            Alpha2code: <span>{country.alpha2Code}</span>{\" \"}\r\n          </li>\r\n          <li>\r\n            Alpha3code <span>{country.alpha3Code}</span>{\" \"}\r\n          </li>\r\n          <li>\r\n            Borders:\r\n            <span>\r\n              <ul>\r\n                {country.borders !== undefined\r\n                  ? country.borders.map((item) => <li key={item}> {item} </li>)\r\n                  : undefined}\r\n              </ul>\r\n            </span>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"final-data\">\r\n          <li>\r\n            Calling codes:\r\n            <span>\r\n              <ul>\r\n                {country.callingCodes !== undefined\r\n                  ? country.callingCodes.map((item) => (\r\n                      <li key={item}> {item} </li>\r\n                    ))\r\n                  : undefined}\r\n              </ul>\r\n            </span>\r\n          </li>\r\n          <li>\r\n            Time zones:\r\n            <span>\r\n              <ul>\r\n                {country.timezones !== undefined\r\n                  ? country.timezones.map((item) => (\r\n                      <li key={item}> {item} </li>\r\n                    ))\r\n                  : undefined}\r\n              </ul>\r\n            </span>\r\n          </li>\r\n        </ul>\r\n        <div className=\"country-buttons\">\r\n          <Link to=\"/countries\">\r\n            <button>Go to countries</button>\r\n          </Link>\r\n          <button\r\n            onClick={(e) => {\r\n              console.log(e.target.innerHTML);\r\n              if (e.target.innerHTML === \"add to favorites\") {\r\n                dispatch(AddToFavorites(country));\r\n                e.target.innerHTML = \"remove from favorites\";\r\n              } else {\r\n                dispatch(RemoveFromFavorites(country));\r\n                e.target.innerHTML = \"add to favorites\";\r\n              }\r\n            }}\r\n          >\r\n            {!Itsaved() ? \"add to favorites\" : \"remove from favorites\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"section home\">\r\n      <section className=\"home-container\">\r\n        <h1>Country data application</h1>\r\n        <p>\r\n          An application where you can find any information about any country!\r\n        </p>\r\n        <Link to=\"/countries\">\r\n          <button>Try to find your country!</button>\r\n        </Link>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FavoritesCard = ({ item }) => {\r\n  return (\r\n    <Link to={\"/countries/\" + item.name} className=\"decoration-text\">\r\n      <div className=\"card-container\">\r\n        <img src={item.flag} alt=\"country flag\" className=\"flag\" />\r\n        <h1 className=\"card-title\"> {item.name} </h1>\r\n        <ul className=\"country-info-list\">\r\n          <li>\r\n            Region: <span> {item.region}</span>{\" \"}\r\n          </li>\r\n          <li>\r\n            Population: <span> {item.population}</span>{\" \"}\r\n          </li>\r\n          <li>\r\n            Capital:<span> {item.capital}</span>{\" \"}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default FavoritesCard;\r\n","export default __webpack_public_path__ + \"static/media/favorites.b54b0b22.png\";","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GetFavoritesCountries } from \"../redux/countriesDuks\";\r\nimport FavoritesCard from \"./FavoritesCard\";\r\n\r\nimport logo from \"../assets/images/favorites.png\";\r\n\r\nconst Favorites = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const favorites = useSelector((store) => store.countries.favorites);\r\n\r\n  useEffect(() => {\r\n    dispatch(GetFavoritesCountries());\r\n  }, []);\r\n\r\n  return favorites.length === 0 ? (\r\n    <div className=\"favorites-empty\">\r\n      <img src={logo} alt=\"\" />\r\n      <h2>\r\n        Hey! Here you can save the countries that you do not want to forget or\r\n        that you want to visit again\r\n      </h2>\r\n    </div>\r\n  ) : (\r\n    <div className=\"section\">\r\n      <div className=\"countries-container\">\r\n        {favorites.map((item) => (\r\n          <FavoritesCard item={item} key={item.name} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React, { Fragment } from 'react'\nimport { Route, BrowserRouter as Router, Switch, Link, NavLink } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport logo from './assets/images/logo.png'\n\nimport './App.css';\nimport Countries from './Components/Countries';\nimport Country from './Components/Country';\nimport Home from './Components/Home';\nimport Favorites from './Components/Favorites';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Router>\n        <header className=\"header\">\n          <Link to=\"/\">\n            <img src={logo} alt=\"Logo\" className=\"logo\" />\n          </Link>\n          <ul className=\"header-list\">\n            <li>\n              <NavLink to=\"/\" exact className=\"header-link\" activeClassName=\"nav-active\" className=\"nav-item\">\n                HOME\n            </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/countries\" exact className=\"header-link\" activeClassName=\"nav-active\" className=\"nav-item\">\n                COUNTRIES\n            </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/favorites\" className=\"header-link\" activeClassName=\"nav-active\" className=\"nav-item\">\n                FAVORITES\n            </NavLink>\n            </li>\n          </ul>\n          <input type=\"checkbox\" className=\"toggle-menu\"/>\n          <div className=\"hamburguer-menu\">\n            <div className=\"line first-line\"></div>\n            <div className=\"line second-line\"></div>\n            <div className=\"line last-line\"></div>\n          </div>\n\n          <ul className=\"header-list-mobile\">\n          <li>\n              <NavLink to=\"/\" exact className=\"header-link\" activeClassName=\"nav-active\" className=\"nav-item\">\n                HOME\n            </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/countries\" exact className=\"header-link\" activeClassName=\"nav-active\" className=\"nav-item\">\n                COUNTRIES\n            </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/favorites\" className=\"header-link\" activeClassName=\"nav-active\" className=\"nav-item\">\n                FAVORITES\n            </NavLink>\n            </li>\n          </ul>\n        </header>\n        <main className=\"main\">\n          <Route render={({ location }) => (\n            <TransitionGroup>\n              <CSSTransition key={location.key} timeout={500} classNames=\"fade\">\n                <Switch location={location}>\n                  <Route path=\"/countries/:country\">\n                    <Country />\n                  </Route>\n                  <Route path=\"/countries\">\n                    <Countries />\n                  </Route>\n                  <Route path=\"/favorites\">\n                    <Favorites/>\n                  </Route>\n                  <Route path=\"/\" exact>\n                    <Home />\n                  </Route>\n                  <Route path=\"*\">\n                    <h1>Error 404 Not Found</h1>\n                  </Route>\n                </Switch>\n              </CSSTransition>\n            </TransitionGroup>\n          )} />\n        </main>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import {createStore, combineReducers, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport countriesReducer from './countriesDuks';\r\n\r\nconst rootReducer = combineReducers({\r\n    countries: countriesReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function generateStore(){\r\n    const store = createStore( rootReducer, composeEnhancers( applyMiddleware(thunk) ) );\r\n\r\n    return store\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport generateStore from './redux/store';\n\nconst store = generateStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n    <Route path=\"/\" component={App}/>\n  </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}